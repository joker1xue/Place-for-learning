23.05.28

程序的内存模型-内存四区

（1）代码区
    在程序编译生成exe可执行文件后，代码区存放了CPU执行的机器指令
    特征：
    共享，共享的目的是对于频繁被执行的程序，只需要在内存中存在一份；
    只读，防止程序意外修改指令产生错误。
    
（2）全局区
    全局区存放的全局变量、静态变量（static修饰）、全局常量（const修饰）和字符串常量
    const修饰的局部常量不存放在全局区中。
    
（3）栈区
    在程序执行后，
    栈区存放的是局部变量和函数形参，由编译器自动分配和释放地址，不要在函数中返回局部变量的地址，即使第一次因为编译器对数据进行保留结果正确，在后续
    的使用中也会出错。
    
（4）堆区
    由程序员分配释放，若程序员不释放，程序结束时操作系统自动释放。使用new在堆区中开辟内存，使用delete删除堆区中相应的内存。
    int * p = new int(10); int * arr = new int[10];
    delete p;delete[] arr;//释放的是p指向的地址中的值，而不是指针，需要释放指针。 
    这样在主函数中接收的指针地址后，子函数中的指针会销毁，但是指向的是在堆区中的值，能够通过接收的指针访问到正确值。
