23.08.22

案例：数组类封装

需求分析：
template<class T>
class Array
{
  private:
  //数组
  T * pAddress;
  //容量
  m_Capacity;
  //大小
  m_Size;

  public:
  构造函数;
  拷贝构造;  //
  operator=;//拷贝构造与operator=的存在是为了解决浅拷贝问题
  //浅拷贝，在构造时单纯将地址的值进行复制，因此在创建多个对象时，如果对一个对象的值进行操作，也会影响其他的对象的值，因此要使用深拷贝来解决
  利用下标的方式进行数组的访问;
  尾插;
  尾删;
  获取数组容量;
  获取数组大小;
  析构函数;
};





























